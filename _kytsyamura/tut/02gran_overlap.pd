#N canvas 284 176 1046 685 10;
#X obj 472 504 tabread4~ \$0-buffer;
#X obj 615 548 *~;
#X obj 472 477 +~;
#X obj 514 478 samphold~;
#X obj 658 406 samphold~;
#X obj 472 442 *~;
#X obj 612 450 /~ 2;
#X floatatom 694 194 0 0 1e+06 0 - grain -;
#X floatatom 583 235 0 0 1e+06 0 - - -;
#X floatatom 805 234 0 0 50 0 - hz -;
#X text 803 215 Hz;
#X obj 663 611 hsl 128 15 0 1 0 0 empty ganho empty -2 -8 0 10 -204786
-1 -1 8900 1;
#N canvas 0 22 450 300 ganho 0;
#X obj 206 206 *~;
#X obj 225 175 line~;
#X msg 225 149 \$1 10;
#X obj 225 113 pow 4;
#X obj 190 245 dac~;
#X obj 226 60 inlet;
#X obj 177 60 inlet~;
#X connect 0 0 4 0;
#X connect 0 0 4 1;
#X connect 1 0 0 1;
#X connect 2 0 1 0;
#X connect 3 0 2 0;
#X connect 5 0 3 0;
#X connect 6 0 0 0;
#X restore 615 633 pd ganho;
#X obj 615 605 +~;
#X obj 683 531 tabread4~ \$0-buffer;
#X obj 683 576 *~;
#X obj 683 504 +~;
#X obj 727 505 samphold~;
#X obj 827 449 samphold~;
#X obj 683 474 *~;
#X obj 806 516 /~ 2;
#X obj 778 412 wrap~;
#X obj 778 384 +~ 0.5;
#X obj 805 271 phasor~;
#X obj 64 181 cnv 15 248 148 empty empty empty 20 12 0 14 -224824 -66577
0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array cos 441 float 0;
#X array seno 441 float 0;
#X coords 0 1 441 0 250 150 1;
#X restore 63 180 graph;
#X obj 172 508 tabwrite~ seno;
#X obj 83 508 tabwrite~ cos;
#X obj 83 442 /~ 2;
#X obj 172 355 phasor~ 150;
#X obj 246 477 metro 300;
#X obj 246 458 tgl 15 0 empty empty empty 17 7 0 10 -183917 -1 -1 1
1;
#X obj 246 437 loadbang;
#X obj 172 441 /~ 2;
#X text 683 175 grão (ms);
#X text 555 213 posição (ms);
#X obj 583 315 s~ \$0-pos;
#X obj 694 315 s~ \$0-grain;
#X obj 805 315 s~ \$0-fase;
#X obj 581 360 r~ \$0-fase;
#X obj 658 368 r~ \$0-grain;
#X obj 778 360 r~ \$0-fase;
#X obj 827 414 r~ \$0-grain;
#X obj 715 482 r~ \$0-pos;
#X obj 502 450 r~ \$0-pos;
#X text 468 560 Abrir outro arquivo;
#X text 264 509 Plotar gráfico;
#X obj 455 256 samplerate~;
#X obj 455 283 / 1000;
#X obj 455 309 v sr_KHz;
#X obj 455 231 loadbang;
#X obj 583 260 expr~ $v1 * sr_KHz \; $v2 * sr_KHz;
#X obj 172 410 wrap~;
#X obj 172 384 +~ 0.5;
#X text 828 384 Defasagem;
#X obj 83 470 creb/sin~;
#X obj 172 470 creb/sin~;
#X obj 612 476 creb/sin~;
#X obj 806 542 creb/sin~;
#X text 224 384 Delay;
#X text 34 39 To compensate for the sound effect of using an envelope
(ie \, amplitude modulation) \, we can overlay two grains in phase
opposition.;
#X text 35 100 The overlap is still a crossfade \, so that as the width
of one envelope decays \, that of the other rises.;
#X text 27 544 To offset the envelopes \, we add the phase of one of
them by 0.5 (which generates a phase opposition). [Wrap ~] keeps the
phase register between 0 and 1 (instead of 0.5 and 1.5).;
#X text 28 591 We divide the phase by 2 because our envelope is half
the cycle of a sine \, so while one envelope is between 0 and 0.5 the
other is between 0.25 and 0.75. In practice \, we have an "equal power
crossfade" of Sine and Cosine.;
#X text 489 39 Using an envelope with half a period of the sine function
\, this lagged overlap generates an Equal Power crossfade \, already
presented previously.;
#X text 490 99 See chart on the left and review (in Part I) the example
08.Fade_Crossfade / 2.Crossfade / 6.Crossfade.sin;
#X text 490 143 In the patch below \, we have the previous example
with the inclusion of overlap of grains.;
#X obj 479 585 bng 20 250 50 0 empty empty empty 17 7 0 10 -241326
-1 -1;
#N canvas 790 22 443 326 sampler 0;
#X obj 233 242 table \$0-buffer;
#X obj 129 243 soundfiler;
#X obj 129 185 list append \$0-buffer;
#X obj 31 72 openpanel;
#X obj 31 95 list append \$0-buffer;
#X msg 31 119 read -resize \$1 \$2;
#X obj 178 94 loadbang;
#X msg 189 116 \; hz 1 \; grain 500 \; pd dsp 1;
#X obj 31 41 inlet;
#X msg 129 214 read -resize bubul.wav \$1;
#X connect 2 0 9 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 5 0 1 0;
#X connect 6 0 7 0;
#X connect 6 0 2 0;
#X connect 8 0 3 0;
#X connect 9 0 1 0;
#X restore 479 611 pd sampler;
#X obj 722 223 swap 1000;
#X obj 722 245 /;
#X obj 722 267 s hz;
#X connect 0 0 1 0;
#X connect 1 0 13 0;
#X connect 2 0 0 0;
#X connect 3 0 2 1;
#X connect 4 0 5 1;
#X connect 5 0 2 0;
#X connect 6 0 57 0;
#X connect 7 0 51 1;
#X connect 7 0 69 0;
#X connect 8 0 51 0;
#X connect 9 0 23 0;
#X connect 11 0 12 1;
#X connect 13 0 12 0;
#X connect 14 0 15 0;
#X connect 15 0 13 1;
#X connect 16 0 14 0;
#X connect 17 0 16 1;
#X connect 18 0 19 1;
#X connect 19 0 16 0;
#X connect 20 0 58 0;
#X connect 21 0 19 0;
#X connect 21 0 20 0;
#X connect 21 0 18 1;
#X connect 21 0 17 1;
#X connect 22 0 21 0;
#X connect 23 0 38 0;
#X connect 28 0 55 0;
#X connect 29 0 28 0;
#X connect 29 0 53 0;
#X connect 30 0 27 0;
#X connect 30 0 26 0;
#X connect 31 0 30 0;
#X connect 32 0 31 0;
#X connect 33 0 56 0;
#X connect 39 0 5 0;
#X connect 39 0 6 0;
#X connect 39 0 4 1;
#X connect 39 0 3 1;
#X connect 40 0 4 0;
#X connect 41 0 22 0;
#X connect 42 0 18 0;
#X connect 43 0 17 0;
#X connect 44 0 3 0;
#X connect 47 0 48 0;
#X connect 48 0 49 0;
#X connect 50 0 47 0;
#X connect 51 0 36 0;
#X connect 51 1 37 0;
#X connect 52 0 33 0;
#X connect 53 0 52 0;
#X connect 55 0 27 0;
#X connect 56 0 26 0;
#X connect 57 0 1 1;
#X connect 58 0 15 1;
#X connect 67 0 68 0;
#X connect 69 0 70 0;
#X connect 69 1 70 1;
#X connect 70 0 71 0;
